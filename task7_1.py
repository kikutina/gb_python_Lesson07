#1)	Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
#Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
#Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
#Далее реализовать перегрузку метода __add__() для реализации операции сложения
# двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
#Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой
# матрицы складываем с первым элементом первой строки второй матрицы и т.д.
class Matrix:
    def __init__(self, list_1, list_2):
        self.list_1 = list_1
        self.list_2 = list_2

    def __str__(self):
        return '\n'.join('\t'.join(map(str,row)) for row in self.list_1)+'\n'+ "\n" +'\n'.join('\t'.join(map(str,row)) for row in self.list_2) +'\n'

    def __add__(self):
        matr = [[0, 0, 0],
                [0, 0, 0],
                [0, 0, 0]]

        for i in range(len(self.list_1)):

            for a in range(len(self.list_2)):
                matr[i][a]=self.list_1[i][a]+self.list_2[i][a]
        return str(str('\n'.join(['\t'.join([str(n) for n in i]) for i in matr])))

my_matr = Matrix ([[3, 2, 8],[9, 8, 25],[65, 2, 6]],
                [[5, 8, 9], [9, 8, 7], [8, 1, 11]])

print(my_matr.__str__())
print(my_matr.__add__())